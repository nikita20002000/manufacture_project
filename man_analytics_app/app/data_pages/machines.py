import random

import streamlit as st
import streamlit_antd_components as sac
import time

def read_machine_data():
    import pandas as pd

    try:
        return pd.read_csv('../data/industrial_processes/machine_data/machines.csv')

    except Exception:
        return '–û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Ñ–∞–π–ª–∞ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è'


def show_machines_page():

    # –°—Ç–∏–ª–∏ –¥–æ–±–∞–≤–ª—è–µ–º –≤ —Ä–∞–∑–º–µ—Ç–∫—É —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    local_css("static/style.css")

    # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –±—É—Ç—Å—Ç—Ä–∞–ø
    import_bootstrap()

    st.title('–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Ä–∞–±–æ—Ç—ã')
    st.header('–°–ø–∏—Å–æ–∫ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è')
    st.markdown('#### –í –¥–∞–Ω–Ω–æ–º —Ä–∞–∑–¥–µ–ª–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤–µ—Å—å —Å–ø–∏—Å–æ–∫ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è –∏ —Å—Ç–∞—Ç—É—Å –µ–≥–æ —Ä–∞–±–æ—Ç—ã')


    machines = update_work().sort_values('InWork', ascending=False)
    machines = machines.set_index('ID')



    for machine in machines.index:

        col1, col2, col3, col4, col5, col6 = st.columns(6, gap='small')


        with col1:
            st.markdown(f'### ‚öôÔ∏è')

        with col2:
            st.markdown(f'### –°—Ç–∞–Ω–æ–∫ :blue[{machine}]')

        with col3:
            st.markdown('### |')

        with col4:
            if machines.at[machine, 'InWork']:
                st.markdown('### –í —Ä–∞–±–æ—Ç–µ')

            else:
                st.markdown('### –û—Ç–∫–ª—é—á–µ–Ω')

        with col5:
            match machines.at[machine, 'MachineStatus']:

                case '–û–ö':
                    with st.popover('–°—Ç–∞—Ç—É—Å ‚úÖ'):
                        st.markdown('### –û–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –∏—Å–ø—Ä–∞–≤–Ω–æ!')

                case '–í–Ω–∏–º–∞–Ω–∏–µ':
                    with st.popover(f'–°—Ç–∞—Ç—É—Å üü†'):
                        st.markdown('### –û–±—Ä–∞—Ç–∏—Ç—å –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Ä–∞–±–æ—Ç—ã –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è')

                case '–û—à–∏–±–∫–∞':
                    with st.popover(f'–°—Ç–∞—Ç—É—Å ‚ùó'):
                        st.markdown('### –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ —Ä–∞–±–æ—Ç—ã')


        with col6:
            with st.popover('–°–≤–µ–¥–µ–Ω–∏—è'):
                st.markdown('### –ó–¥–µ—Å—å –±—É–¥—É—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Å–≤–µ–¥–µ–Ω–∏—è –æ –Ω–µ–∏—Å–ø—Ä–∞–≤–Ω–æ—Å—Ç—è—Ö!!!')

        st.html("""
        <style>
            h3 {
                margin-bottom: 20px;
            }
        </style>
        """)
        st.html("""
        <div class='container-fluid divider'></div> 
        
        """)


def local_css(file_name):
        with open(file_name) as f:
            st.markdown(f'<style>{f.read()}</style>', unsafe_allow_html=True)


def import_bootstrap():
    st.markdown(f'<script src = "https://cdn.jsdelivr.net/npm/bootstrap@5.1.1/dist/js/bootstrap.bundle.min.js" integrity = "sha384-/bQdsTh/da6pkI1MST/rWKFNjaCP5gBSY4sEBT38Q/9RBh9AH40zEOg7Hlq2THRZ" crossorigin = "anonymous" > < / script >', unsafe_allow_html=True)



def update_work():
    import numpy as np

    machine_df = read_machine_data()
    machine_df['InWork'] = np.random.randint(0,2, size=10)

    return machine_df

